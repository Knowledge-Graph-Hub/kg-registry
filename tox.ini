# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# To use a PEP 517 build-backend you are required to configure tox to use an isolated_build:
# https://tox.readthedocs.io/en/latest/example/package.html
isolated_build = True
skipsdist = True

envlist =
    # always keep coverage-clean first
    coverage-clean
    lint
    flake8
    mypy
    docstr-coverage
    py

[testenv]
allowlist_externals =
    poetry
commands =
    poetry run pytest
description = Run unit tests with pytest. This is a special environment that does not get a name, and
              can be referenced with "py".

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:lint]
deps =
    black
    isort
skip_install = true
commands =
    black src/ tests/
    isort src/ tests/
description = Run linters.

[testenv:doclint]
deps =
    rstfmt
skip_install = true
commands =
    rstfmt docs/source/
description = Run documentation linters.

[testenv:flake8]
skip_install = true
deps =
    darglint
    flake8>=6.0.0
    flake8-black
    flake8-bandit
    flake8-bugbear
    flake8-colors
    flake8-docstrings
    flake8-isort
    flake8-print
    pydocstyle
commands =
    flake8 src/
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
exclude =
    .git,__pycache__,src/kg_registry/kg_registry_schema/datamodel/
max-line-length = 100
ignore =
    DAR101
    DAR201
    DAR301
    DAR401
    E111
    E203
    T201
    W503
    D412
    S301
    S403
    B001
    B008
    D101
    D102
    D103
    D104
    D105
    D202
    E722
    F841
    F821
    S101
    S113
    S110
    S311
    B019
    S608
    

[testenv:mypy]
deps = mypy
skip_install = true
commands = mypy --install-types --non-interactive --ignore-missing-imports --no-strict-optional --no-warn-no-return src/ --exclude 'src/kg_registry/kg_registry_schema/*'
description = Run the mypy tool to check static typing on the project.

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage src/ tests/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage